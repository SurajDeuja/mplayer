!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADC_USE_MUTUAL_EXCLUSION	coverage/halconf.h	176;"	d
ADC_USE_WAIT	coverage/halconf.h	168;"	d
ADEFS	coverage/Makefile	/^ADEFS   = $(DADEFS) $(UADEFS)$/;"	m
ALLOWED_DELAY	testevt.c	52;"	d	file:
ALLOWED_DELAY	testmbox.c	52;"	d	file:
ALLOWED_DELAY	testmtx.c	61;"	d	file:
ALLOWED_DELAY	testsem.c	52;"	d	file:
AS	coverage/Makefile	/^AS   = $(TRGT)gcc -x assembler-with-cpp$/;"	m
ASFLAGS	coverage/Makefile	/^ASFLAGS = -Wa,-amhls=$(<:.s=.lst) $(ADEFS)$/;"	m
ASRC	coverage/Makefile	/^ASRC =$/;"	m
CAN_USE_SLEEP_MODE	coverage/halconf.h	187;"	d
CC	coverage/Makefile	/^CC   = $(TRGT)gcc$/;"	m
CHIBIOS	coverage/Makefile	/^CHIBIOS = ..\/..$/;"	m
CH_DBG_ENABLE_ASSERTS	coverage/chconf.h	383;"	d
CH_DBG_ENABLE_CHECKS	coverage/chconf.h	371;"	d
CH_DBG_ENABLE_STACK_CHECK	coverage/chconf.h	408;"	d
CH_DBG_ENABLE_TRACE	coverage/chconf.h	394;"	d
CH_DBG_FILL_THREADS	coverage/chconf.h	420;"	d
CH_DBG_SYSTEM_STATE_CHECK	coverage/chconf.h	360;"	d
CH_DBG_THREADS_PROFILING	coverage/chconf.h	433;"	d
CH_FREQUENCY	coverage/chconf.h	44;"	d
CH_MEMCORE_SIZE	coverage/chconf.h	74;"	d
CH_NO_IDLE_THREAD	coverage/chconf.h	91;"	d
CH_OPTIMIZE_SPEED	coverage/chconf.h	112;"	d
CH_TIME_QUANTUM	coverage/chconf.h	59;"	d
CH_USE_CONDVARS	coverage/chconf.h	198;"	d
CH_USE_CONDVARS_TIMEOUT	coverage/chconf.h	210;"	d
CH_USE_DYNAMIC	coverage/chconf.h	340;"	d
CH_USE_EVENTS	coverage/chconf.h	220;"	d
CH_USE_EVENTS_TIMEOUT	coverage/chconf.h	232;"	d
CH_USE_HEAP	coverage/chconf.h	302;"	d
CH_USE_MAILBOXES	coverage/chconf.h	267;"	d
CH_USE_MALLOC_HEAP	coverage/chconf.h	316;"	d
CH_USE_MEMCORE	coverage/chconf.h	288;"	d
CH_USE_MEMPOOLS	coverage/chconf.h	327;"	d
CH_USE_MESSAGES	coverage/chconf.h	243;"	d
CH_USE_MESSAGES_PRIORITY	coverage/chconf.h	255;"	d
CH_USE_MUTEXES	coverage/chconf.h	186;"	d
CH_USE_QUEUES	coverage/chconf.h	277;"	d
CH_USE_REGISTRY	coverage/chconf.h	131;"	d
CH_USE_SEMAPHORES	coverage/chconf.h	152;"	d
CH_USE_SEMAPHORES_PRIORITY	coverage/chconf.h	164;"	d
CH_USE_SEMSW	coverage/chconf.h	176;"	d
CH_USE_WAITEXIT	coverage/chconf.h	142;"	d
COV	coverage/Makefile	/^COV  = gcov$/;"	m
CPFLAGS	coverage/Makefile	/^CPFLAGS = $(OPT) -Wall -Wextra -Wstrict-prototypes -fverbose-asm -Wa,-alms=$(<:.c=.lst) $(DEFS)$/;"	m
DADEFS	coverage/Makefile	/^DADEFS =$/;"	m
DDEFS	coverage/Makefile	/^DDEFS = -DSIMULATOR$/;"	m
DEFS	coverage/Makefile	/^DEFS    = $(DDEFS) $(UDEFS)$/;"	m
DELAY_BETWEEN_TESTS	test.h	32;"	d
DINCDIR	coverage/Makefile	/^DINCDIR =$/;"	m
DLIBDIR	coverage/Makefile	/^DLIBDIR =$/;"	m
DLIBS	coverage/Makefile	/^DLIBS = -lws2_32$/;"	m
HAL_USE_ADC	coverage/halconf.h	51;"	d
HAL_USE_CAN	coverage/halconf.h	58;"	d
HAL_USE_EXT	coverage/halconf.h	65;"	d
HAL_USE_GPT	coverage/halconf.h	72;"	d
HAL_USE_I2C	coverage/halconf.h	79;"	d
HAL_USE_ICU	coverage/halconf.h	86;"	d
HAL_USE_MAC	coverage/halconf.h	93;"	d
HAL_USE_MMC_SPI	coverage/halconf.h	100;"	d
HAL_USE_PAL	coverage/halconf.h	44;"	d
HAL_USE_PWM	coverage/halconf.h	107;"	d
HAL_USE_RTC	coverage/halconf.h	114;"	d
HAL_USE_SDC	coverage/halconf.h	121;"	d
HAL_USE_SERIAL	coverage/halconf.h	128;"	d
HAL_USE_SERIAL_USB	coverage/halconf.h	135;"	d
HAL_USE_SPI	coverage/halconf.h	142;"	d
HAL_USE_TM	coverage/halconf.h	37;"	d
HAL_USE_UART	coverage/halconf.h	149;"	d
HAL_USE_USB	coverage/halconf.h	156;"	d
HOST_TYPE	coverage/Makefile	/^HOST_TYPE = Win32$/;"	m
I2C_USE_MUTUAL_EXCLUSION	coverage/halconf.h	198;"	d
IDLE_LOOP_HOOK	coverage/chconf.h	496;"	d
INCDIR	coverage/Makefile	/^INCDIR  = $(patsubst %,-I%,$(DINCDIR) $(UINCDIR))$/;"	m
LDFLAGS	coverage/Makefile	/^LDFLAGS = -Wl,-Map=$(PROJECT).map,--cref,--no-warn-mismatch -lgcov $(LIBDIR)$/;"	m
LDSCRIPT	coverage/Makefile	/^LDSCRIPT=$/;"	m
LIBDIR	coverage/Makefile	/^LIBDIR  = $(patsubst %,-L%,$(DLIBDIR) $(ULIBDIR))$/;"	m
LIBS	coverage/Makefile	/^LIBS    = $(DLIBS) $(ULIBS)$/;"	m
MAC_USE_EVENTS	coverage/halconf.h	216;"	d
MAC_USE_ZERO_COPY	coverage/halconf.h	209;"	d
MAX_THREADS	test.h	42;"	d
MAX_TOKENS	test.h	43;"	d
MB_SIZE	testmbox.c	53;"	d	file:
MMC_NICE_WAITING	coverage/halconf.h	232;"	d
OBJS	coverage/Makefile	/^OBJS    = $(ASRC:.s=.o) $(SRC:.c=.o)$/;"	m
OPT	coverage/Makefile	/^OPT = -ggdb -O0 -fomit-frame-pointer -fprofile-arcs -ftest-coverage$/;"	m
PROJECT	coverage/Makefile	/^PROJECT = ch$/;"	m
SDC_INIT_RETRY	coverage/halconf.h	244;"	d
SDC_MMC_SUPPORT	coverage/halconf.h	253;"	d
SDC_NICE_WAITING	coverage/halconf.h	263;"	d
SERIAL_BUFFERS_SIZE	coverage/halconf.h	287;"	d
SERIAL_DEFAULT_BITRATE	coverage/halconf.h	276;"	d
SIZE	testheap.c	49;"	d	file:
SPI_USE_MUTUAL_EXCLUSION	coverage/halconf.h	307;"	d
SPI_USE_WAIT	coverage/halconf.h	299;"	d
SRC	coverage/Makefile	/^SRC  = ${PORTSRC} \\$/;"	m
SYSTEM_HALT_HOOK	coverage/chconf.h	519;"	d
SYSTEM_TICK_EVENT_HOOK	coverage/chconf.h	507;"	d
TESTINC	test.mk	/^TESTINC = ${CHIBIOS}\/test$/;"	m
TESTSRC	test.mk	/^TESTSRC = ${CHIBIOS}\/test\/test.c \\$/;"	m
TEST_NO_BENCHMARKS	test.h	39;"	d
TEST_QUEUES_SIZE	testqueues.c	55;"	d	file:
THREADS_STACK_SIZE	test.h	46;"	d
THREADS_STACK_SIZE	test.h	48;"	d
THREADS_STACK_SIZE	test.h	50;"	d
THREADS_STACK_SIZE	test.h	52;"	d
THREAD_CONTEXT_SWITCH_HOOK	coverage/chconf.h	486;"	d
THREAD_EXT_EXIT_HOOK	coverage/chconf.h	476;"	d
THREAD_EXT_FIELDS	coverage/chconf.h	450;"	d
THREAD_EXT_INIT_HOOK	coverage/chconf.h	462;"	d
TRGT	coverage/Makefile	/^TRGT = mingw32-$/;"	m
TestThread	test.c	/^msg_t TestThread(void *p) {$/;"	f
UADEFS	coverage/Makefile	/^UADEFS =$/;"	m
UDEFS	coverage/Makefile	/^UDEFS =$/;"	m
UINCDIR	coverage/Makefile	/^UINCDIR = $(PORTINC) $(KERNINC) $(TESTINC) \\$/;"	m
ULIBDIR	coverage/Makefile	/^ULIBDIR =$/;"	m
ULIBS	coverage/Makefile	/^ULIBS =$/;"	m
WA_SIZE	test.h	54;"	d
_CHCONF_H_	coverage/chconf.h	29;"	d
_HALCONF_H_	coverage/halconf.h	29;"	d
_TESTBMK_H_	testbmk.h	18;"	d
_TESTDYN_H_	testdyn.h	18;"	d
_TESTEVT_H_	testevt.h	18;"	d
_TESTHEAP_H_	testheap.h	18;"	d
_TESTMBOX_H_	testmbox.h	18;"	d
_TESTMSG_H_	testmsg.h	18;"	d
_TESTMTX_H_	testmtx.h	18;"	d
_TESTPOOLS_H_	testpools.h	18;"	d
_TESTQUEUES_H_	testqueues.h	18;"	d
_TESTRDY_H_	testthd.h	18;"	d
_TESTSEM_H_	testsem.h	18;"	d
_TEST_H_	test.h	26;"	d
_test_assert	test.c	/^bool_t _test_assert(unsigned point, bool_t condition) {$/;"	f
_test_assert_sequence	test.c	/^bool_t _test_assert_sequence(unsigned point, char *expected) {$/;"	f
_test_assert_time_window	test.c	/^bool_t _test_assert_time_window(unsigned point, systime_t start, systime_t end) {$/;"	f
_test_fail	test.c	/^bool_t _test_fail(unsigned point) {$/;"	f
bmk10_execute	testbmk.c	/^static void bmk10_execute(void) {$/;"	f	file:
bmk11_execute	testbmk.c	/^static void bmk11_execute(void) {$/;"	f	file:
bmk11_setup	testbmk.c	/^static void bmk11_setup(void) {$/;"	f	file:
bmk12_execute	testbmk.c	/^static void bmk12_execute(void) {$/;"	f	file:
bmk12_setup	testbmk.c	/^static void bmk12_setup(void) {$/;"	f	file:
bmk13_execute	testbmk.c	/^static void bmk13_execute(void) {$/;"	f	file:
bmk1_execute	testbmk.c	/^static void bmk1_execute(void) {$/;"	f	file:
bmk2_execute	testbmk.c	/^static void bmk2_execute(void) {$/;"	f	file:
bmk3_execute	testbmk.c	/^static void bmk3_execute(void) {$/;"	f	file:
bmk4_execute	testbmk.c	/^static void bmk4_execute(void) {$/;"	f	file:
bmk5_execute	testbmk.c	/^static void bmk5_execute(void) {$/;"	f	file:
bmk6_execute	testbmk.c	/^static void bmk6_execute(void) {$/;"	f	file:
bmk7_execute	testbmk.c	/^static void bmk7_execute(void) {$/;"	f	file:
bmk7_setup	testbmk.c	/^static void bmk7_setup(void) {$/;"	f	file:
bmk8_execute	testbmk.c	/^static void bmk8_execute(void) {$/;"	f	file:
bmk9_execute	testbmk.c	/^static void bmk9_execute(void) {$/;"	f	file:
buffer	test.h	/^  uint8_t buffer[WA_SIZE * 5];$/;"	m	union:test_buffers
chp	test.c	/^static BaseSequentialStream *chp;$/;"	v	file:
clear_tokens	test.c	/^static void clear_tokens(void) {$/;"	f	file:
dyn1_execute	testdyn.c	/^static void dyn1_execute(void) {$/;"	f	file:
dyn1_setup	testdyn.c	/^static void dyn1_setup(void) {$/;"	f	file:
dyn2_execute	testdyn.c	/^static void dyn2_execute(void) {$/;"	f	file:
dyn2_setup	testdyn.c	/^static void dyn2_setup(void) {$/;"	f	file:
dyn3_execute	testdyn.c	/^static void dyn3_execute(void) {$/;"	f	file:
dyn3_setup	testdyn.c	/^static void dyn3_setup(void) {$/;"	f	file:
evhndl	testevt.c	/^static ROMCONST evhandler_t evhndl[] = {h1, h2, h3};$/;"	v	file:
evt1_execute	testevt.c	/^static void evt1_execute(void) {$/;"	f	file:
evt1_setup	testevt.c	/^static void evt1_setup(void) {$/;"	f	file:
evt2_execute	testevt.c	/^static void evt2_execute(void) {$/;"	f	file:
evt2_setup	testevt.c	/^static void evt2_setup(void) {$/;"	f	file:
evt3_execute	testevt.c	/^static void evt3_execute(void) {$/;"	f	file:
evt3_setup	testevt.c	/^static void evt3_setup(void) {$/;"	f	file:
execute	test.h	/^  void (*execute)(void);        \/**< @brief Test case execution function.   *\/$/;"	m	struct:testcase
execute_test	test.c	/^static void execute_test(const struct testcase *tcp) {$/;"	f	file:
failpoint	test.c	/^static unsigned failpoint;$/;"	v	file:
global_fail	test.c	/^static bool_t local_fail, global_fail;$/;"	v	file:
h1	testevt.c	/^static void h1(eventid_t id) {(void)id;test_emit_token('A');}$/;"	f	file:
h2	testevt.c	/^static void h2(eventid_t id) {(void)id;test_emit_token('B');}$/;"	f	file:
h3	testevt.c	/^static void h3(eventid_t id) {(void)id;test_emit_token('C');}$/;"	f	file:
heap1	testdyn.c	/^static MemoryHeap heap1;$/;"	v	file:
heap1_execute	testheap.c	/^static void heap1_execute(void) {$/;"	f	file:
heap1_setup	testheap.c	/^static void heap1_setup(void) {$/;"	f	file:
local_fail	test.c	/^static bool_t local_fail, global_fail;$/;"	v	file:
main	coverage/main.c	/^int main(int argc, char *argv[]) {$/;"	f
mbox1_execute	testmbox.c	/^static void mbox1_execute(void) {$/;"	f	file:
mbox1_setup	testmbox.c	/^static void mbox1_setup(void) {$/;"	f	file:
mp1	testdyn.c	/^static MemoryPool mp1;$/;"	v	file:
msg1_execute	testmsg.c	/^static void msg1_execute(void) {$/;"	f	file:
msg_loop_test	testbmk.c	/^static unsigned int msg_loop_test(Thread *tp) {$/;"	f	file:
mtx1	testbmk.c	/^static Mutex mtx1;$/;"	v	file:
mtx1_execute	testmtx.c	/^static void mtx1_execute(void) {$/;"	f	file:
mtx1_setup	testmtx.c	/^static void mtx1_setup(void) {$/;"	f	file:
mtx2_execute	testmtx.c	/^static void mtx2_execute(void) {$/;"	f	file:
mtx2_setup	testmtx.c	/^static void mtx2_setup(void) {$/;"	f	file:
mtx3_execute	testmtx.c	/^static void mtx3_execute(void) {$/;"	f	file:
mtx3_setup	testmtx.c	/^static void mtx3_setup(void) {$/;"	f	file:
mtx4_execute	testmtx.c	/^static void mtx4_execute(void) {$/;"	f	file:
mtx4_setup	testmtx.c	/^static void mtx4_setup(void) {$/;"	f	file:
mtx5_execute	testmtx.c	/^static void mtx5_execute(void) {$/;"	f	file:
mtx5_setup	testmtx.c	/^static void mtx5_setup(void) {$/;"	f	file:
mtx6_execute	testmtx.c	/^static void mtx6_execute(void) {$/;"	f	file:
mtx6_setup	testmtx.c	/^static void mtx6_setup(void) {$/;"	f	file:
mtx7_execute	testmtx.c	/^static void mtx7_execute(void) {$/;"	f	file:
mtx7_setup	testmtx.c	/^static void mtx7_setup(void) {$/;"	f	file:
mtx8_execute	testmtx.c	/^static void mtx8_execute(void) {$/;"	f	file:
mtx8_setup	testmtx.c	/^static void mtx8_setup(void) {$/;"	f	file:
name	test.h	/^  const char *name;             \/**< @brief Test case name.                 *\/$/;"	m	struct:testcase
notify	testqueues.c	/^static void notify(GenericQueue *qp) {$/;"	f	file:
null_provider	testpools.c	/^static void *null_provider(size_t size) {$/;"	f	file:
patternbmk	testbmk.c	/^ROMCONST struct testcase * ROMCONST patternbmk[] = {$/;"	v	typeref:struct:ROMCONST
patterndyn	testdyn.c	/^ROMCONST struct testcase * ROMCONST patterndyn[] = {$/;"	v	typeref:struct:ROMCONST
patternevt	testevt.c	/^ROMCONST struct testcase * ROMCONST patternevt[] = {$/;"	v	typeref:struct:ROMCONST
patternheap	testheap.c	/^ROMCONST struct testcase * ROMCONST patternheap[] = {$/;"	v	typeref:struct:ROMCONST
patternmbox	testmbox.c	/^ROMCONST struct testcase * ROMCONST patternmbox[] = {$/;"	v	typeref:struct:ROMCONST
patternmsg	testmsg.c	/^ROMCONST struct testcase * ROMCONST patternmsg[] = {$/;"	v	typeref:struct:ROMCONST
patternmtx	testmtx.c	/^ROMCONST struct testcase * ROMCONST patternmtx[] = {$/;"	v	typeref:struct:ROMCONST
patternpools	testpools.c	/^ROMCONST struct testcase * ROMCONST patternpools[] = {$/;"	v	typeref:struct:ROMCONST
patternqueues	testqueues.c	/^ROMCONST struct testcase * ROMCONST patternqueues[] = {$/;"	v	typeref:struct:ROMCONST
patterns	test.c	/^static ROMCONST struct testcase * ROMCONST *patterns[] = {$/;"	v	typeref:struct:ROMCONST	file:
patternsem	testsem.c	/^ROMCONST struct testcase * ROMCONST patternsem[] = {$/;"	v	typeref:struct:ROMCONST
patternthd	testthd.c	/^ROMCONST struct testcase * ROMCONST patternthd[] = {$/;"	v	typeref:struct:ROMCONST
pools1_execute	testpools.c	/^static void pools1_execute(void) {$/;"	f	file:
pools1_setup	testpools.c	/^static void pools1_setup(void) {$/;"	f	file:
print_line	test.c	/^static void print_line(void) {$/;"	f	file:
print_tokens	test.c	/^static void print_tokens(void) {$/;"	f	file:
queues1_execute	testqueues.c	/^static void queues1_execute(void) {$/;"	f	file:
queues1_setup	testqueues.c	/^static void queues1_setup(void) {$/;"	f	file:
queues2_execute	testqueues.c	/^static void queues2_execute(void) {$/;"	f	file:
queues2_setup	testqueues.c	/^static void queues2_setup(void) {$/;"	f	file:
regfind	testdyn.c	/^static bool_t regfind(Thread *tp) {$/;"	f	file:
sem1	testbmk.c	/^static Semaphore sem1;$/;"	v	file:
sem1_execute	testsem.c	/^static void sem1_execute(void) {$/;"	f	file:
sem1_setup	testsem.c	/^static void sem1_setup(void) {$/;"	f	file:
sem2_execute	testsem.c	/^static void sem2_execute(void) {$/;"	f	file:
sem2_setup	testsem.c	/^static void sem2_setup(void) {$/;"	f	file:
sem3_execute	testsem.c	/^static void sem3_execute(void) {$/;"	f	file:
sem3_setup	testsem.c	/^static void sem3_setup(void) {$/;"	f	file:
sem4_execute	testsem.c	/^static void sem4_execute(void) {$/;"	f	file:
setup	test.h	/^  void (*setup)(void);          \/**< @brief Test case preparation function. *\/$/;"	m	struct:testcase
teardown	test.h	/^  void (*teardown)(void);       \/**< @brief Test case clean up function.    *\/$/;"	m	struct:testcase
test	test.c	/^union test_buffers test;$/;"	v	typeref:union:test_buffers
test_assert	test.h	120;"	d
test_assert_lock	test.h	132;"	d
test_assert_sequence	test.h	147;"	d
test_assert_time_window	test.h	159;"	d
test_buffers	test.h	/^union test_buffers {$/;"	u
test_cpu_pulse	test.c	/^void test_cpu_pulse(unsigned duration) {$/;"	f
test_emit_token	test.c	/^void test_emit_token(char token) {$/;"	f
test_fail	test.h	108;"	d
test_heap	testheap.c	/^static MemoryHeap test_heap;$/;"	v	file:
test_print	test.c	/^void test_print(const char *msgp) {$/;"	f
test_println	test.c	/^void test_println(const char *msgp) {$/;"	f
test_printn	test.c	/^void test_printn(uint32_t n) {$/;"	f
test_start_timer	test.c	/^void test_start_timer(unsigned ms) {$/;"	f
test_terminate_threads	test.c	/^void test_terminate_threads(void) {$/;"	f
test_timer_done	test.c	/^bool_t test_timer_done;$/;"	v
test_wait_threads	test.c	/^void test_wait_threads(void) {$/;"	f
test_wait_tick	test.c	/^systime_t test_wait_tick(void) {$/;"	f
testbmk1	testbmk.c	/^ROMCONST struct testcase testbmk1 = {$/;"	v	typeref:struct:testcase
testbmk10	testbmk.c	/^ROMCONST struct testcase testbmk10 = {$/;"	v	typeref:struct:testcase
testbmk11	testbmk.c	/^ROMCONST struct testcase testbmk11 = {$/;"	v	typeref:struct:testcase
testbmk12	testbmk.c	/^ROMCONST struct testcase testbmk12 = {$/;"	v	typeref:struct:testcase
testbmk13	testbmk.c	/^ROMCONST struct testcase testbmk13 = {$/;"	v	typeref:struct:testcase
testbmk2	testbmk.c	/^ROMCONST struct testcase testbmk2 = {$/;"	v	typeref:struct:testcase
testbmk3	testbmk.c	/^ROMCONST struct testcase testbmk3 = {$/;"	v	typeref:struct:testcase
testbmk4	testbmk.c	/^ROMCONST struct testcase testbmk4 = {$/;"	v	typeref:struct:testcase
testbmk5	testbmk.c	/^ROMCONST struct testcase testbmk5 = {$/;"	v	typeref:struct:testcase
testbmk6	testbmk.c	/^ROMCONST struct testcase testbmk6 = {$/;"	v	typeref:struct:testcase
testbmk7	testbmk.c	/^ROMCONST struct testcase testbmk7 = {$/;"	v	typeref:struct:testcase
testbmk8	testbmk.c	/^ROMCONST struct testcase testbmk8 = {$/;"	v	typeref:struct:testcase
testbmk9	testbmk.c	/^ROMCONST struct testcase testbmk9 = {$/;"	v	typeref:struct:testcase
testcase	test.h	/^struct testcase {$/;"	s
testdyn1	testdyn.c	/^ROMCONST struct testcase testdyn1 = {$/;"	v	typeref:struct:testcase
testdyn2	testdyn.c	/^ROMCONST struct testcase testdyn2 = {$/;"	v	typeref:struct:testcase
testdyn3	testdyn.c	/^ROMCONST struct testcase testdyn3 = {$/;"	v	typeref:struct:testcase
testevt1	testevt.c	/^ROMCONST struct testcase testevt1 = {$/;"	v	typeref:struct:testcase
testevt2	testevt.c	/^ROMCONST struct testcase testevt2 = {$/;"	v	typeref:struct:testcase
testevt3	testevt.c	/^ROMCONST struct testcase testevt3 = {$/;"	v	typeref:struct:testcase
testheap1	testheap.c	/^ROMCONST struct testcase testheap1 = {$/;"	v	typeref:struct:testcase
testmbox1	testmbox.c	/^ROMCONST struct testcase testmbox1 = {$/;"	v	typeref:struct:testcase
testmsg1	testmsg.c	/^ROMCONST struct testcase testmsg1 = {$/;"	v	typeref:struct:testcase
testmtx1	testmtx.c	/^ROMCONST struct testcase testmtx1 = {$/;"	v	typeref:struct:testcase
testmtx2	testmtx.c	/^ROMCONST struct testcase testmtx2 = {$/;"	v	typeref:struct:testcase
testmtx3	testmtx.c	/^ROMCONST struct testcase testmtx3 = {$/;"	v	typeref:struct:testcase
testmtx4	testmtx.c	/^ROMCONST struct testcase testmtx4 = {$/;"	v	typeref:struct:testcase
testmtx5	testmtx.c	/^ROMCONST struct testcase testmtx5 = {$/;"	v	typeref:struct:testcase
testmtx6	testmtx.c	/^ROMCONST struct testcase testmtx6 = {$/;"	v	typeref:struct:testcase
testmtx7	testmtx.c	/^ROMCONST struct testcase testmtx7 = {$/;"	v	typeref:struct:testcase
testmtx8	testmtx.c	/^ROMCONST struct testcase testmtx8 = {$/;"	v	typeref:struct:testcase
testpools1	testpools.c	/^ROMCONST struct testcase testpools1 = {$/;"	v	typeref:struct:testcase
testqueues1	testqueues.c	/^ROMCONST struct testcase testqueues1 = {$/;"	v	typeref:struct:testcase
testqueues2	testqueues.c	/^ROMCONST struct testcase testqueues2 = {$/;"	v	typeref:struct:testcase
testsem1	testsem.c	/^ROMCONST struct testcase testsem1 = {$/;"	v	typeref:struct:testcase
testsem2	testsem.c	/^ROMCONST struct testcase testsem2 = {$/;"	v	typeref:struct:testcase
testsem3	testsem.c	/^ROMCONST struct testcase testsem3 = {$/;"	v	typeref:struct:testcase
testsem4	testsem.c	/^ROMCONST struct testcase testsem4 = {$/;"	v	typeref:struct:testcase
testthd1	testthd.c	/^ROMCONST struct testcase testthd1 = {$/;"	v	typeref:struct:testcase
testthd2	testthd.c	/^ROMCONST struct testcase testthd2 = {$/;"	v	typeref:struct:testcase
testthd3	testthd.c	/^ROMCONST struct testcase testthd3 = {$/;"	v	typeref:struct:testcase
testthd4	testthd.c	/^ROMCONST struct testcase testthd4 = {$/;"	v	typeref:struct:testcase
thd1_execute	testthd.c	/^static void thd1_execute(void) {$/;"	f	file:
thd2_execute	testthd.c	/^static void thd2_execute(void) {$/;"	f	file:
thd3_execute	testthd.c	/^static void thd3_execute(void) {$/;"	f	file:
thd4_execute	testthd.c	/^static void thd4_execute(void) {$/;"	f	file:
thread	testdyn.c	/^static msg_t thread(void *p) {$/;"	f	file:
thread	testmsg.c	/^static msg_t thread(void *p) {$/;"	f	file:
thread	testthd.c	/^static msg_t thread(void *p) {$/;"	f	file:
thread1	testbmk.c	/^static msg_t thread1(void *p) {$/;"	f	file:
thread1	testevt.c	/^static msg_t thread1(void *p) {$/;"	f	file:
thread1	testmtx.c	/^static msg_t thread1(void *p) {$/;"	f	file:
thread1	testqueues.c	/^static msg_t thread1(void *p) {$/;"	f	file:
thread1	testsem.c	/^static msg_t thread1(void *p) {$/;"	f	file:
thread10	testmtx.c	/^static msg_t thread10(void *p) {$/;"	f	file:
thread11	testmtx.c	/^static msg_t thread11(void *p) {$/;"	f	file:
thread12	testmtx.c	/^static msg_t thread12(void *p) {$/;"	f	file:
thread2	testbmk.c	/^static msg_t thread2(void *p) {$/;"	f	file:
thread2	testevt.c	/^static msg_t thread2(void *p) {$/;"	f	file:
thread2	testqueues.c	/^static msg_t thread2(void *p) {$/;"	f	file:
thread2	testsem.c	/^static msg_t thread2(void *p) {$/;"	f	file:
thread2H	testmtx.c	/^static msg_t thread2H(void *p) {$/;"	f	file:
thread2L	testmtx.c	/^static msg_t thread2L(void *p) {$/;"	f	file:
thread2M	testmtx.c	/^static msg_t thread2M(void *p) {$/;"	f	file:
thread3	testbmk.c	/^static msg_t thread3(void *p) {$/;"	f	file:
thread3	testsem.c	/^static msg_t thread3(void *p) {$/;"	f	file:
thread3H	testmtx.c	/^static msg_t thread3H(void *p) {$/;"	f	file:
thread3HH	testmtx.c	/^static msg_t thread3HH(void *p) {$/;"	f	file:
thread3L	testmtx.c	/^static msg_t thread3L(void *p) {$/;"	f	file:
thread3LL	testmtx.c	/^static msg_t thread3LL(void *p) {$/;"	f	file:
thread3M	testmtx.c	/^static msg_t thread3M(void *p) {$/;"	f	file:
thread4	testbmk.c	/^msg_t thread4(void *p) {$/;"	f
thread4	testsem.c	/^static msg_t thread4(void *p) {$/;"	f	file:
thread4a	testmtx.c	/^static msg_t thread4a(void *p) {$/;"	f	file:
thread4b	testmtx.c	/^static msg_t thread4b(void *p) {$/;"	f	file:
thread8	testbmk.c	/^static msg_t thread8(void *p) {$/;"	f	file:
threads	test.c	/^Thread *threads[MAX_THREADS];$/;"	v
tmo	testbmk.c	/^static void tmo(void *param) {(void)param;}$/;"	f	file:
tmr	test.c	/^static void tmr(void *p) {$/;"	f	file:
tokens_buffer	test.c	/^static char tokens_buffer[MAX_TOKENS];$/;"	v	file:
tokp	test.c	/^static char *tokp;$/;"	v	file:
vt	test.c	/^static VirtualTimer vt;$/;"	v	file:
wa	test.c	/^void * ROMCONST wa[5] = {test.wa.T0, test.wa.T1, test.wa.T2,$/;"	v
wa	test.h	/^  } wa;$/;"	m	union:test_buffers	typeref:struct:test_buffers::__anon1
